@page "/" 
@using BlazorAppWhoisServer.Model
@using WhoisObserver
<link href="/css/pages/IndexStyle.css" rel="stylesheet" type="text/css">

<PageTitle>WHOIS Demo</PageTitle>

<h1>WHOIS demo Blazor Server v0.2</h1>

<div class="discription-txt col-12"><p>There will probably be bugs.</p></div>

<div class="general-window container">
    <div class="versoin-info col-12">
        <p>
          Here is info from API.
        </p>
    </div>
    
    <form class="row g-3">

        <div class="col-auto">
            <select class="form-select" aria-label="Default select example" @onchange="OnSelectItem">
             
                @foreach (var template in templates)
                {  
                    <option value=@template>@template</option>
                }

            </select>
        </div>

        <div class="col-auto">
            <EditForm class="form-control" placeholder="hostname/ip-address" aria-label="hostname/ip-address"
                      Model="@hosntameModel" OnValidSubmit="@HandleValidSubmit" @bind-value="@valueInput">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <InputText id="name" @bind-Value="hosntameModel.Hostname" />
               
            </EditForm>
        </div>
      
      @*  <div class="col-auto">
            <input type="text" class="form-control"
                   placeholder="hostname/ip-address" aria-label="hostname/ip-address" @bind-value="@valueInput">
        </div>*@
        <div class="col-auto">
            <button type="button" class=" btn btn-outline-primary" onclick="@RequestForWhoisClientApi">Search</button>
        </div>
    </form>
    <div class="col-12 split-div"/>
    <div class="col">
        <p><b>RESULT :</b> @resultJson</p>
    </div>


  
</div>


@code{
    string resultJson = string.Empty;
    string valueInput = string.Empty;
    string SelectedStringApiServer = "ip-api";

    List<string> templates = new List<string>() { "ip-api", "Ru-Center", "Whois.ru" };

    private async void RequestForWhoisClientApi()
    {
        WhoisClient testClient = new();
        try
        {
            switch (SelectedStringApiServer)
            {
                case "ip-api":
                    resultJson = await testClient.GetResponceOriginalJsonAsync(valueInput, WhoisObserver.Services.Model.ServersClientFamily.IpApi);
                    break;

                case "Ru-Center":
                    resultJson = await testClient.GetResponceOriginalJsonAsync(valueInput, WhoisObserver.Services.Model.ServersClientFamily.RuCenter);
                    break;

                case "Whois.ru":
                    resultJson = await testClient.GetResponceOriginalJsonAsync(valueInput, WhoisObserver.Services.Model.ServersClientFamily.WhoisRu);
                    break;

                default:
                    resultJson = string.Empty;
                    break;
            }
        }
        catch(Exception ex)
        {
            resultJson = ex.Message;
        }
  
    }

    private void OnSelectItem(ChangeEventArgs e)
    {
        SelectedStringApiServer = e.Value!.ToString()!;
    }

    ///
    private HosntameModel hosntameModel = new();

    private void HandleValidSubmit()
    {
        Console.WriteLine("HandleValidSubmit called");

        // Process the valid form
    }
}

@*<SurveyPrompt Title="How is Blazor working for you?" />*@
